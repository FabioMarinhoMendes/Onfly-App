services:
  app:
    build:
      args:
        user: fabio
        uid: 1000
      context: .
      dockerfile: dockerfiles/php/Dockerfile  
    container_name: app
    tty: true   
    volumes:
      - .:/var/www
    networks:
      - laravel_app
    depends_on:  # Garante que o banco de dados esteja rodando antes do app
      - database
    environment: # Variáveis de ambiente para o Laravel
      - APP_KEY=base64:$(openssl rand -base64 32) # Gere uma nova chave
      - DB_HOST=database # Nome do serviço do banco de dados
      - DB_DATABASE=projeto_viagem # Substitua pelo nome do seu banco
      - DB_USERNAME=docker # Substitua pelo usuário
      - DB_PASSWORD=docker # Substitua pela senha

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "8000:80"
    volumes:
      - .:/var/www
      - ./dockerfiles/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel_app
    depends_on:  # Nginx depende do app
      - app

  database:  # Serviço para o banco de dados
    image: mysql:8.3.0 # Ou a versão do MySQL que você preferir
    container_name: database
    ports:
      - "3306:3306" # Apenas se precisar acessar o banco diretamente do host
    environment:
      - MYSQL_ROOT_PASSWORD=docker # Senha do root do MySQL
      - MYSQL_DATABASE=projeto_viagem # Mesmo nome do DB_DATABASE acima
      - MYSQL_USER=docker # Mesmo usuário do DB_USERNAME acima
      - MYSQL_PASSWORD=docker # Mesma senha do DB_PASSWORD acima
    volumes:
      - db_data:/var/lib/mysql # Persiste os dados do banco de dados
    networks:
      - laravel_app

volumes:
  db_data: # Volume nomeado para persistência dos dados

networks:
  laravel_app:
    driver: bridge

